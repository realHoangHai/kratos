# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Kratos API
    description: Kratos API
    contact:
        name: realHoangHai
        url: https://github.com/realHoangHai/kratos
        email: aflyingpenguin2lth@gmail.com
    license:
        name: MIT License
        url: https://github.com/realHoangHai/kratos/blob/main/LICENSE
    version: "1.0"
paths:
    /admin/v1/login:
        post:
            tags:
                - AuthenticationService
            description: Login
            operationId: AuthenticationService_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
            security:
                - {}
    /admin/v1/logout:
        post:
            tags:
                - AuthenticationService
            description: Logout
            operationId: AuthenticationService_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /admin/v1/me:
        get:
            tags:
                - AuthenticationService
            description: Get profile
            operationId: AuthenticationService_GetMe
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
    /admin/v1/system:
        get:
            tags:
                - SystemService
            description: Get a list of system settings
            operationId: SystemService_ListSystem
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  schema:
                    type: string
                - name: orQuery
                  in: query
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: noPaging
                  in: query
                  schema:
                    type: boolean
                - name: fieldMask
                  in: query
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSystemResponse'
        post:
            tags:
                - SystemService
            description: Create system settings
            operationId: SystemService_CreateSystem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateSystemRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/System'
    /admin/v1/system/{id}:
        get:
            tags:
                - SystemService
            description: Get system setting data
            operationId: SystemService_GetSystem
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/System'
        put:
            tags:
                - SystemService
            description: Update system settings
            operationId: SystemService_UpdateSystem
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: operatorId
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/System'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/System'
        delete:
            tags:
                - SystemService
            description: Delete system settings
            operationId: SystemService_DeleteSystem
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: operatorId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /admin/v1/users:
        get:
            tags:
                - UserService
            description: List of users for admin
            operationId: UserService_ListUser
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  schema:
                    type: string
                - name: orQuery
                  in: query
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: noPaging
                  in: query
                  schema:
                    type: boolean
                - name: fieldMask
                  in: query
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserResponse'
        post:
            tags:
                - UserService
            description: Create user
            operationId: UserService_CreateUser
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
    /admin/v1/users/{id}:
        get:
            tags:
                - UserService
            description: Get user detail for admin
            operationId: UserService_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
        put:
            tags:
                - UserService
            description: Update user for admin
            operationId: UserService_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
        delete:
            tags:
                - UserService
            description: Delete user for admin
            operationId: UserService_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
components:
    schemas:
        CreateSystemRequest:
            type: object
            properties:
                system:
                    $ref: '#/components/schemas/System'
                operatorId:
                    type: string
            description: Request - Create system settings
        KratosStatus:
            type: object
            properties:
                code:
                    type: number
                    description: 错误码
                    format: int32
                message:
                    type: string
                    description: wrong information
                reason:
                    type: string
                    description: wrong reason
                metadata:
                    type: object
                    description: metadata
            description: Kratos error return
        ListSystemResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/System'
                total:
                    type: integer
                    format: int32
            description: Response - List of system settings
        ListUserResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                total:
                    type: integer
                    format: int32
            description: List of users reply
        LoginRequest:
            required:
                - user_name
                - password
                - grant_type
            type: object
            properties:
                user_name:
                    type: string
                password:
                    type: string
                grant_type:
                    type: string
                    default: password
                    description: Authorization type, the value here is fixed to "password", required.
                scope:
                    type: string
                client_id:
                    type: string
                    description: The application's identification ID
                client_secret:
                    type: string
                    description: Application password
            description: User background login - request
        LoginResponse:
            required:
                - access_token
                - refresh_token
            type: object
            properties:
                access_token:
                    type: string
                    description: Access token, required. The access token string issued by the authorization server.
                refresh_token:
                    type: string
                    description: Refresh token, used to obtain the next access token, optional. If the access token is about to expire, it is useful to return a refresh token that the application can use to obtain another access token. However, refresh tokens cannot be issued for tokens issued through implicit grants.
                token_type:
                    type: string
                    default: Bearer
                    description: The type of token. This value is case-insensitive and required. It can be bearer type or mac type. It is usually just the string "Bearer".
                expires_in:
                    type: string
                    description: The token validity time, in seconds. If the access token expires, the server should reply with the duration of the access token granted. If this parameter is omitted, the expiration time must be set in other ways.
                scope:
                    type: string
                    description: A space-separated list of user grant scopes. If not provided, scope grants any scope, defaults to an empty list.
            description: User background login - response
        LogoutRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
            description: Logout - request
        System:
            type: object
            properties:
                id:
                    type: string
                theme:
                    type: integer
                    format: int32
                title:
                    type: string
                keywords:
                    type: string
                description:
                    type: string
                recordNumber:
                    type: string
        User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                userName:
                    type: string
                email:
                    type: string
                avatar:
                    type: string
                description:
                    type: string
                password:
                    type: string
                createTime:
                    type: string
                updateTime:
                    type: string
                status:
                    enum:
                        - ON
                        - OFF
                    type: string
                    default: ON
                    description: User status
                roleId:
                    type: integer
                    description: RoleID
                    format: uint32
                creatorId:
                    type: integer
                    description: CreatorID
                    format: uint32
                authority:
                    enum:
                        - SYS_ADMIN
                        - CUSTOMER_USER
                        - GUEST_USER
                    type: string
                    default: CUSTOMER_USER
                    description: Permissions
                    format: enum
            description: User
    responses:
        default:
            description: default kratos response
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/KratosStatus'
    securitySchemes:
        OAuth2PasswordBearer:
            type: oauth2
            flows:
                password:
                    tokenUrl: /admin/v1/login
                    refreshUrl: /admin/v1/refresh_token
                    scopes: {}
security:
    - OAuth2PasswordBearer: []
tags:
    - name: AuthenticationService
      description: The admin authen service definition
    - name: SystemService
      description: System configuration service
    - name: UserService
      description: The user service definition.
